 
(declare-term-types (sort (identifier "Start")) (sort (identifier "R"))) 
(add-constructor (sort (identifier "Start")) :operator (identifier "$eval") :children (list (sort (identifier "R")))) 
(add-constructor (sort (identifier "R")) :operator (identifier "$eps") :children (list)) 
(add-constructor (sort (identifier "R")) :operator (identifier "$phi") :children (list)) 
(add-constructor (sort (identifier "R")) :operator (identifier "$char_0") :children (list)) 
(add-constructor (sort (identifier "R")) :operator (identifier "$char_1") :children (list)) 
(add-constructor (sort (identifier "R")) :operator (identifier "$any") :children (list)) 
(add-constructor (sort (identifier "R")) :operator (identifier "$or") :children (list (sort (identifier "R")) (sort (identifier "R")))) 
(add-constructor (sort (identifier "R")) :operator (identifier "$concat") :children (list (sort (identifier "R")) (sort (identifier "R")))) 
(add-constructor (sort (identifier "R")) :operator (identifier "$star") :children (list (sort (identifier "R")))) 
(declare-function (identifier "Start.Sem") :rank (rank :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :return-sort (sort (identifier "Bool")))) 
(declare-function (identifier "R.Sem") :rank (rank :argument-sorts (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :return-sort (sort (identifier "Bool")))) 
(define-function (identifier "Start.Sem") :rank (rank :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :return-sort (sort (identifier "Bool"))) :definition (term (lambda :arguments (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "result")) :body (match :term (variable (identifier "t") :sort (sort (identifier "Start"))) :binders (list (binder :operator (identifier "$eval") :arguments (list (identifier "t1")) :child (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (exists :bindings (list (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :binding-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :child (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "len") :sort (sort (identifier "Int"))) 1) :return-sort (sort (identifier "Bool"))) (application (identifier "R.Sem") :argument-sorts (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "t1") :sort (sort (identifier "R"))) (variable (identifier "len") :sort (sort (identifier "Int"))) (variable (identifier "s_0") :sort (sort (identifier "Int"))) (variable (identifier "s_1") :sort (sort (identifier "Int"))) (variable (identifier "s_2") :sort (sort (identifier "Int"))) (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (variable (identifier "X_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "result") :sort (sort (identifier "Bool"))) (variable (identifier "X_0_1") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) (exists :bindings (list (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :binding-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :child (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "len") :sort (sort (identifier "Int"))) 2) :return-sort (sort (identifier "Bool"))) (application (identifier "R.Sem") :argument-sorts (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "t1") :sort (sort (identifier "R"))) (variable (identifier "len") :sort (sort (identifier "Int"))) (variable (identifier "s_0") :sort (sort (identifier "Int"))) (variable (identifier "s_1") :sort (sort (identifier "Int"))) (variable (identifier "s_2") :sort (sort (identifier "Int"))) (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (variable (identifier "X_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "result") :sort (sort (identifier "Bool"))) (variable (identifier "X_0_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) (exists :bindings (list (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :binding-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :child (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "len") :sort (sort (identifier "Int"))) 3) :return-sort (sort (identifier "Bool"))) (application (identifier "R.Sem") :argument-sorts (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "t1") :sort (sort (identifier "R"))) (variable (identifier "len") :sort (sort (identifier "Int"))) (variable (identifier "s_0") :sort (sort (identifier "Int"))) (variable (identifier "s_1") :sort (sort (identifier "Int"))) (variable (identifier "s_2") :sort (sort (identifier "Int"))) (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (variable (identifier "X_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "result") :sort (sort (identifier "Bool"))) (variable (identifier "X_0_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) :return-sort (sort (identifier "Bool"))))))))) 
(define-function (identifier "R.Sem") :rank (rank :argument-sorts (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :return-sort (sort (identifier "Bool"))) :definition (term (lambda :arguments (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :body (match :term (variable (identifier "t") :sort (sort (identifier "R"))) :binders (list (binder :operator (identifier "$eps") :arguments (list) :child (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) (binder :operator (identifier "$phi") :arguments (list) :child (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) (binder :operator (identifier "$any") :arguments (list) :child (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) (binder :operator (identifier "$char_0") :arguments (list) :child (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "s_0") :sort (sort (identifier "Int"))) 0) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "s_1") :sort (sort (identifier "Int"))) 0) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "s_2") :sort (sort (identifier "Int"))) 0) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) (binder :operator (identifier "$char_1") :arguments (list) :child (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "s_0") :sort (sort (identifier "Int"))) 1) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "s_1") :sort (sort (identifier "Int"))) 1) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "s_2") :sort (sort (identifier "Int"))) 1) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) (binder :operator (identifier "$or") :arguments (list (identifier "t1") (identifier "t2")) :child (exists :bindings (list (identifier "A_0_0") (identifier "A_0_1") (identifier "A_0_2") (identifier "A_0_3") (identifier "A_1_1") (identifier "A_1_2") (identifier "A_1_3") (identifier "A_2_2") (identifier "A_2_3") (identifier "A_3_3") (identifier "B_0_0") (identifier "B_0_1") (identifier "B_0_2") (identifier "B_0_3") (identifier "B_1_1") (identifier "B_1_2") (identifier "B_1_3") (identifier "B_2_2") (identifier "B_2_3") (identifier "B_3_3")) :binding-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :child (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "R.Sem") :argument-sorts (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "t1") :sort (sort (identifier "R"))) (variable (identifier "len") :sort (sort (identifier "Int"))) (variable (identifier "s_0") :sort (sort (identifier "Int"))) (variable (identifier "s_1") :sort (sort (identifier "Int"))) (variable (identifier "s_2") :sort (sort (identifier "Int"))) (variable (identifier "A_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "A_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_0_3") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_3") :sort (sort (identifier "Bool"))) (variable (identifier "A_2_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_2_3") :sort (sort (identifier "Bool"))) (variable (identifier "A_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "R.Sem") :argument-sorts (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "t2") :sort (sort (identifier "R"))) (variable (identifier "len") :sort (sort (identifier "Int"))) (variable (identifier "s_0") :sort (sort (identifier "Int"))) (variable (identifier "s_1") :sort (sort (identifier "Int"))) (variable (identifier "s_2") :sort (sort (identifier "Int"))) (variable (identifier "B_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_0") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_1") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_1") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_2_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_2_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_3_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) (binder :operator (identifier "$concat") :arguments (list (identifier "t1") (identifier "t2")) :child (exists :bindings (list (identifier "A_0_0") (identifier "A_0_1") (identifier "A_0_2") (identifier "A_0_3") (identifier "A_1_1") (identifier "A_1_2") (identifier "A_1_3") (identifier "A_2_2") (identifier "A_2_3") (identifier "A_3_3") (identifier "B_0_0") (identifier "B_0_1") (identifier "B_0_2") (identifier "B_0_3") (identifier "B_1_1") (identifier "B_1_2") (identifier "B_1_3") (identifier "B_2_2") (identifier "B_2_3") (identifier "B_3_3")) :binding-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :child (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "R.Sem") :argument-sorts (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "t1") :sort (sort (identifier "R"))) (variable (identifier "len") :sort (sort (identifier "Int"))) (variable (identifier "s_0") :sort (sort (identifier "Int"))) (variable (identifier "s_1") :sort (sort (identifier "Int"))) (variable (identifier "s_2") :sort (sort (identifier "Int"))) (variable (identifier "A_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "A_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_0_3") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_3") :sort (sort (identifier "Bool"))) (variable (identifier "A_2_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_2_3") :sort (sort (identifier "Bool"))) (variable (identifier "A_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "R.Sem") :argument-sorts (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "t2") :sort (sort (identifier "R"))) (variable (identifier "len") :sort (sort (identifier "Int"))) (variable (identifier "s_0") :sort (sort (identifier "Int"))) (variable (identifier "s_1") :sort (sort (identifier "Int"))) (variable (identifier "s_2") :sort (sort (identifier "Int"))) (variable (identifier "B_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_0") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_1") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_1") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_1") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_2_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_2_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_2_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_3_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) (binder :operator (identifier "$star") :arguments (list (identifier "t1")) :child (exists :bindings (list (identifier "A_0_0") (identifier "A_0_1") (identifier "A_0_2") (identifier "A_0_3") (identifier "A_1_1") (identifier "A_1_2") (identifier "A_1_3") (identifier "A_2_2") (identifier "A_2_3") (identifier "A_3_3")) :binding-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :child (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "R.Sem") :argument-sorts (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "t1") :sort (sort (identifier "R"))) (variable (identifier "len") :sort (sort (identifier "Int"))) (variable (identifier "s_0") :sort (sort (identifier "Int"))) (variable (identifier "s_1") :sort (sort (identifier "Int"))) (variable (identifier "s_2") :sort (sort (identifier "Int"))) (variable (identifier "A_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "A_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_0_3") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_3") :sort (sort (identifier "Bool"))) (variable (identifier "A_2_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_2_3") :sort (sort (identifier "Bool"))) (variable (identifier "A_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "A_0_1") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_2") :sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_3") :sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_3") :sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (variable (identifier "A_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))))))))) 
(chc :head (relation (identifier "Start.Sem") :signature (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "result"))) :body (list (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t1") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")))) :input-variables (list (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2")) :output-variables (list (identifier "result")) :variables (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "result") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :constraint (term (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "len") :sort (sort (identifier "Int"))) 1) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "result") :sort (sort (identifier "Bool"))) (variable (identifier "X_0_1") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :constructor (constructor (identifier "$eval") :arguments (list (identifier "t1")) :argument-sorts (list (sort (identifier "R"))) :return-sort (sort (identifier "Start")))) 
(chc :head (relation (identifier "Start.Sem") :signature (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "result"))) :body (list (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t1") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")))) :input-variables (list (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2")) :output-variables (list (identifier "result")) :variables (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "result") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :constraint (term (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "len") :sort (sort (identifier "Int"))) 2) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "result") :sort (sort (identifier "Bool"))) (variable (identifier "X_0_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :constructor (constructor (identifier "$eval") :arguments (list (identifier "t1")) :argument-sorts (list (sort (identifier "R"))) :return-sort (sort (identifier "Start")))) 
(chc :head (relation (identifier "Start.Sem") :signature (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "result"))) :body (list (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t1") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")))) :input-variables (list (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2")) :output-variables (list (identifier "result")) :variables (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "result") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :constraint (term (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "len") :sort (sort (identifier "Int"))) 3) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "result") :sort (sort (identifier "Bool"))) (variable (identifier "X_0_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :constructor (constructor (identifier "$eval") :arguments (list (identifier "t1")) :argument-sorts (list (sort (identifier "R"))) :return-sort (sort (identifier "Start")))) 
(chc :head (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3"))) :body (list) :input-variables (list (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2")) :output-variables (list (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :variables (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :constraint (term (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :constructor (constructor (identifier "$eps") :arguments (list) :argument-sorts (list) :return-sort (sort (identifier "R")))) 
(chc :head (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3"))) :body (list) :input-variables (list (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2")) :output-variables (list (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :variables (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :constraint (term (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :constructor (constructor (identifier "$phi") :arguments (list) :argument-sorts (list) :return-sort (sort (identifier "R")))) 
(chc :head (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3"))) :body (list) :input-variables (list (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2")) :output-variables (list (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :variables (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :constraint (term (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :constructor (constructor (identifier "$any") :arguments (list) :argument-sorts (list) :return-sort (sort (identifier "R")))) 
(chc :head (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3"))) :body (list) :input-variables (list (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2")) :output-variables (list (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :variables (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :constraint (term (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "s_0") :sort (sort (identifier "Int"))) 0) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "s_1") :sort (sort (identifier "Int"))) 0) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "s_2") :sort (sort (identifier "Int"))) 0) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :constructor (constructor (identifier "$char_0") :arguments (list) :argument-sorts (list) :return-sort (sort (identifier "R")))) 
(chc :head (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3"))) :body (list) :input-variables (list (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2")) :output-variables (list (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :variables (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :constraint (term (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "s_0") :sort (sort (identifier "Int"))) 1) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "s_1") :sort (sort (identifier "Int"))) 1) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Int")) (sort (identifier "Int"))) :arguments (list (variable (identifier "s_2") :sort (sort (identifier "Int"))) 1) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :constructor (constructor (identifier "$char_1") :arguments (list) :argument-sorts (list) :return-sort (sort (identifier "R")))) 
(chc :head (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3"))) :body (list (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t1") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "A_0_0") (identifier "A_0_1") (identifier "A_0_2") (identifier "A_0_3") (identifier "A_1_1") (identifier "A_1_2") (identifier "A_1_3") (identifier "A_2_2") (identifier "A_2_3") (identifier "A_3_3"))) (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t2") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "B_0_0") (identifier "B_0_1") (identifier "B_0_2") (identifier "B_0_3") (identifier "B_1_1") (identifier "B_1_2") (identifier "B_1_3") (identifier "B_2_2") (identifier "B_2_3") (identifier "B_3_3")))) :input-variables (list (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2")) :output-variables (list (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :variables (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3") (identifier "A_0_0") (identifier "A_0_1") (identifier "A_0_2") (identifier "A_0_3") (identifier "A_1_1") (identifier "A_1_2") (identifier "A_1_3") (identifier "A_2_2") (identifier "A_2_3") (identifier "A_3_3") (identifier "B_0_0") (identifier "B_0_1") (identifier "B_0_2") (identifier "B_0_3") (identifier "B_1_1") (identifier "B_1_2") (identifier "B_1_3") (identifier "B_2_2") (identifier "B_2_3") (identifier "B_3_3")) :constraint (term (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_0") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_1") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_1") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_2_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_2_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_3_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :constructor (constructor (identifier "$or") :arguments (list (identifier "t1") (identifier "t2")) :argument-sorts (list (sort (identifier "R")) (sort (identifier "R"))) :return-sort (sort (identifier "R")))) 
(chc :head (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3"))) :body (list (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t1") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "A_0_0") (identifier "A_0_1") (identifier "A_0_2") (identifier "A_0_3") (identifier "A_1_1") (identifier "A_1_2") (identifier "A_1_3") (identifier "A_2_2") (identifier "A_2_3") (identifier "A_3_3"))) (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t2") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "B_0_0") (identifier "B_0_1") (identifier "B_0_2") (identifier "B_0_3") (identifier "B_1_1") (identifier "B_1_2") (identifier "B_1_3") (identifier "B_2_2") (identifier "B_2_3") (identifier "B_3_3")))) :input-variables (list (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2")) :output-variables (list (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :variables (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3") (identifier "A_0_0") (identifier "A_0_1") (identifier "A_0_2") (identifier "A_0_3") (identifier "A_1_1") (identifier "A_1_2") (identifier "A_1_3") (identifier "A_2_2") (identifier "A_2_3") (identifier "A_3_3") (identifier "B_0_0") (identifier "B_0_1") (identifier "B_0_2") (identifier "B_0_3") (identifier "B_1_1") (identifier "B_1_2") (identifier "B_1_3") (identifier "B_2_2") (identifier "B_2_3") (identifier "B_3_3")) :constraint (term (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_0") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_1") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_1") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_0") :sort (sort (identifier "Bool"))) (variable (identifier "B_0_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_1") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_1") :sort (sort (identifier "Bool"))) (variable (identifier "B_1_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_2_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_2_2") :sort (sort (identifier "Bool"))) (variable (identifier "B_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_2_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_3_3") :sort (sort (identifier "Bool"))) (variable (identifier "B_3_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :constructor (constructor (identifier "$concat") :arguments (list (identifier "t1") (identifier "t2")) :argument-sorts (list (sort (identifier "R")) (sort (identifier "R"))) :return-sort (sort (identifier "R")))) 
(chc :head (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3"))) :body (list (relation (identifier "R.Sem") :signature (list (sort (identifier "R")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (identifier "t1") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "A_0_0") (identifier "A_0_1") (identifier "A_0_2") (identifier "A_0_3") (identifier "A_1_1") (identifier "A_1_2") (identifier "A_1_3") (identifier "A_2_2") (identifier "A_2_3") (identifier "A_3_3")))) :input-variables (list (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2")) :output-variables (list (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3")) :variables (list (identifier "t") (identifier "len") (identifier "s_0") (identifier "s_1") (identifier "s_2") (identifier "X_0_0") (identifier "X_0_1") (identifier "X_0_2") (identifier "X_0_3") (identifier "X_1_1") (identifier "X_1_2") (identifier "X_1_3") (identifier "X_2_2") (identifier "X_2_3") (identifier "X_3_3") (identifier "A_0_0") (identifier "A_0_1") (identifier "A_0_2") (identifier "A_0_3") (identifier "A_1_1") (identifier "A_1_2") (identifier "A_1_3") (identifier "A_2_2") (identifier "A_2_3") (identifier "A_3_3")) :constraint (term (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_0") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "A_0_1") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_2") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_2") :sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_0_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_3") :sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_0_1") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_1") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_1_2") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_1_3") :sort (sort (identifier "Bool"))) (application (identifier "or") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_3") :sort (sort (identifier "Bool"))) (application (identifier "and") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "A_1_2") :sort (sort (identifier "Bool"))) (variable (identifier "A_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_2") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_2_3") :sort (sort (identifier "Bool"))) (variable (identifier "A_2_3") :sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))) (application (identifier "=") :argument-sorts (list (sort (identifier "Bool")) (sort (identifier "Bool"))) :arguments (list (variable (identifier "X_3_3") :sort (sort (identifier "Bool"))) (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool")))) :constructor (constructor (identifier "$star") :arguments (list (identifier "t1")) :argument-sorts (list (sort (identifier "R"))) :return-sort (sort (identifier "R")))) 
(synth-fun (identifier "match_regex") :term-type (sort (identifier "Start")) :grammar (grammar :non-terminals (list (identifier "@Start__agtt") (identifier "@R__agtt")) :non-terminal-types (list (sort (identifier "Start")) (sort (identifier "R"))) :productions (list (production :instance (identifier "@Start__agtt") :occurrences (list (identifier "@R__agtt")) :operator (identifier "$eval")) (production :instance (identifier "@R__agtt") :occurrences (list) :operator (identifier "$eps")) (production :instance (identifier "@R__agtt") :occurrences (list) :operator (identifier "$phi")) (production :instance (identifier "@R__agtt") :occurrences (list) :operator (identifier "$char_0")) (production :instance (identifier "@R__agtt") :occurrences (list) :operator (identifier "$char_1")) (production :instance (identifier "@R__agtt") :occurrences (list) :operator (identifier "$any")) (production :instance (identifier "@R__agtt") :occurrences (list (identifier "@R__agtt") (identifier "@R__agtt")) :operator (identifier "$or")) (production :instance (identifier "@R__agtt") :occurrences (list (identifier "@R__agtt") (identifier "@R__agtt")) :operator (identifier "$concat")) (production :instance (identifier "@R__agtt") :occurrences (list (identifier "@R__agtt")) :operator (identifier "$star"))))) 
(constraint (term (application (identifier "Start.Sem") :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (application (identifier "match_regex") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Start"))) 1 0 40 40 (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) 
(constraint (term (application (identifier "Start.Sem") :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (application (identifier "match_regex") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Start"))) 2 0 1 40 (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) 
(constraint (term (application (identifier "Start.Sem") :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (application (identifier "match_regex") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Start"))) 2 0 0 40 (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) 
(constraint (term (application (identifier "Start.Sem") :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (application (identifier "match_regex") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Start"))) 3 0 1 1 (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) 
(constraint (term (application (identifier "Start.Sem") :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (application (identifier "match_regex") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Start"))) 3 0 0 0 (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) 
(constraint (term (application (identifier "Start.Sem") :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (application (identifier "match_regex") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Start"))) 3 0 1 0 (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) 
(constraint (term (application (identifier "Start.Sem") :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (application (identifier "match_regex") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Start"))) 3 0 0 1 (application (identifier "true") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) 
(constraint (term (application (identifier "Start.Sem") :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (application (identifier "match_regex") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Start"))) 1 1 40 40 (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) 
(constraint (term (application (identifier "Start.Sem") :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (application (identifier "match_regex") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Start"))) 2 1 1 40 (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) 
(constraint (term (application (identifier "Start.Sem") :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (application (identifier "match_regex") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Start"))) 2 1 0 40 (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) 
(constraint (term (application (identifier "Start.Sem") :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (application (identifier "match_regex") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Start"))) 3 1 1 1 (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) 
(constraint (term (application (identifier "Start.Sem") :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (application (identifier "match_regex") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Start"))) 3 1 0 0 (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) 
(constraint (term (application (identifier "Start.Sem") :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (application (identifier "match_regex") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Start"))) 3 1 1 0 (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) 
(constraint (term (application (identifier "Start.Sem") :argument-sorts (list (sort (identifier "Start")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Int")) (sort (identifier "Bool"))) :arguments (list (application (identifier "match_regex") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Start"))) 3 1 0 1 (application (identifier "false") :argument-sorts (list) :arguments (list) :return-sort (sort (identifier "Bool")))) :return-sort (sort (identifier "Bool"))))) 
(check-synth)