# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types:
      - published

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        include:
          - name: Ubuntu Build
            os: ubuntu-latest
            suffix: linux-x64

          - name: Windows Build
            os: windows-latest
            suffix: win-x64

          - name: macOS Build
            os: macos-latest
            suffix: macos-x64

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.SUBMODULE_PAT }}
          submodules: recursive

      - name: Install dependencies
        uses: ./.github/actions/setup-sbcl

      - name: Build CLI app
        run: |
          sbcl --disable-debugger --load "bootstrap.lisp" --load "ks2/build-helper.lisp" --eval "(build-app :public-release t)"

      - name: Build solver core
        run: |
          sbcl --disable-debugger --load "bootstrap.lisp" --load "ks2/build-helper.lisp" --eval "(build-core)"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ks2-bin-${{ matrix.suffix }}
          path: ks2/bin/

  package:
    strategy:
      matrix:
        include:
          - name: Package Linux
            suffix: linux-x64
            chmod: true
            parser-archive-file: semgus-parser-linux-x64.zip
            cvc5-archive-file: cvc5-Linux
            exe-suffix:
          - name: Package Windows
            suffix: win-x64
            chmod: false
            parser-archive-file: semgus-parser-win-x64.zip
            cvc5-archive-file: cvc5-Win64.exe
            exe-suffix: .exe
          - name: Package macOS
            suffix: macos-x64
            chmod: true
            parser-archive-file: semgus-parser-osx-x64.zip
            cvc5-archive-file: cvc5-macOS
            exe-suffix:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ks2-bin-${{ matrix.suffix }}
          path: bin

      - name: Update Permissions
        if: ${{ matrix.chmod == true }}
        run: |
          set -x
          shopt -s nullglob
          ls -l -a bin
          chmod a+x bin/ks2 bin/*.image bin/*.core bin/*.exe
          ls -l -a bin

      - name: Zip Solver
        run: |
          mkdir zip
          zip -j -r zip/ks2-bin-${{ matrix.suffix }}.zip bin/*

      - name: Upload Solver
        uses: actions/upload-artifact@v3
        with:
          name: ks2-bin-${{ matrix.suffix }}.zip
          path: zip/*.zip

      - name: Download Parser
        uses: robinraju/release-downloader@v1.7
        with:
          repository: "SemGuS-Git/Semgus-Parser"
          latest: true
          fileName: ${{ matrix.parser-archive-file }}
          out-file-path: parser

      - name: Unpack Parser
        run: |
          ls -l -a parser
          unzip -d bin parser/${{ matrix.parser-archive-file }}

      - name: Zip Solver+Parser
        run: zip -j -r zip/ks2-bin+parser-${{ matrix.suffix }}.zip bin/*

      - name: Upload Solver+Parser
        uses: actions/upload-artifact@v3
        with:
          name: ks2-bin+parser-${{ matrix.suffix }}.zip
          path: zip/ks2-bin+parser-${{ matrix.suffix }}.zip

      - name: Download cvc5
        uses: robinraju/release-downloader@v1.7
        with:
          repository: cvc5/cvc5
          latest: true
          fileName: ${{ matrix.cvc5-archive-file }}
          out-file-path: bin

      - name: Rename cvc5
        run: mv bin/${{ matrix.cvc5-archive-file }} bin/cvc5${{ matrix.exe-suffix }}

      - name: Update cvc5 Permissions
        if: ${{ matrix.chmod == true }}
        run: chmod a+x bin/cvc5

      - name: Zip Solver+All
        run: zip -j -r zip/ks2-bin+all-${{ matrix.suffix }}.zip bin/*

      - name: Upload Solver+All
        uses: actions/upload-artifact@v3
        with:
          name: ks2-bin+all-${{ matrix.suffix }}.zip
          path: zip/ks2-bin+all-${{ matrix.suffix }}.zip

  smoke-test:
    needs: [package]
    strategy:
      matrix:
        include:
          - name: Ubuntu Smoke Tests
            os: ubuntu-latest
            suffix: linux-x64

          - name: Windows Smoke Tests
            os: windows-latest
            suffix: win-x64

          - name: macOS Smoke Tests
            os: macos-latest
            suffix: macos-x64

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.SUBMODULE_PAT }}
          submodules: recursive
          
      - uses: actions/download-artifact@v3
        with:
          name: ks2-bin+all-${{ matrix.suffix }}.zip

      - name: Unzip Package
        shell: bash
        run: |
          mkdir -p ks2/bin
          unzip ks2-bin+all-${{ matrix.suffix }}.zip -d ks2/bin/

      - name: Smoke Tests
        run: ks2/run-smoke-tests.sh
        shell: bash

  release:
    runs-on: ubuntu-latest
    needs: [package]
    if: github.event_name == 'release'

    steps:
      - uses: actions/download-artifact@v3
        with:
          path: assets

      - name: Display Assets
        run: ls -l -a assets/*

      - name: Update Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.event.release.name }}
          tag_name: ${{ github.event.release.tag_name }}
          files: assets/*.zip/*.zip

  benchmarks:
    if: false # Disable for now
    strategy:
      fail-fast: false
      matrix:
        benchmark:
          - datatypes
          - imperative
          - integer-arithmetic
          - non-deterministic
#          - regular-expressions/manually-constructed

    name: Benchmark Suite ${{ matrix.benchmark }}
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v3

      - name: Grab Binary
        uses: actions/download-artifact@v3
        with:
          name: ks2-bin-linux-x64
          path: bin

      - name: Grab cvc5
        uses: robinraju/release-downloader@v1.7
        with:
          repository: cvc5/cvc5
          latest: true
          fileName: cvc5-Linux
          out-file-path: bin

      - name: Run Suite
        continue-on-error: true
        run: |
          mv bin/cvc5-Linux bin/cvc5
          chmod a+x bin/*
          mkdir data
          bin/ks2 benchmark "benchmarks/${{ matrix.benchmark }}"

      - name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: results
          path: data/

  report:
    runs-on: ubuntu-latest
    needs: [benchmarks]

    steps:
      - name: Grab Binary
        uses: actions/download-artifact@v3
        with:
          name: ks2-bin-linux-x64
          path: bin

      - name: Grab Data
        uses: actions/download-artifact@v3
        with:
          name: results
          path: data

      - name: Generate Report
        run: |
          chmod a+x bin/*
          bin/ks2 report -o results.html data/*.json

      - name: Upload Report
        uses: actions/upload-artifact@v3
        with:
          name: report
          path: results.html
        
